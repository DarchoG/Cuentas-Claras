--
-- PostgreSQL database dump
--

-- Dumped from database version 17.0
-- Dumped by pg_dump version 17.0

-- Started on 2024-11-18 17:44:01

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 242 (class 1255 OID 16527)
-- Name: ajustar_saldo_egreso(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.ajustar_saldo_egreso() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dinero_disponible_actual FLOAT;
BEGIN
    -- Obtener el saldo actual de la tarjeta
    SELECT dinero_disponible INTO dinero_disponible_actual
    FROM tarjetas
    WHERE id_usuario = NEW.id_usuario AND id_tarjeta = NEW.id_tarjeta;

    -- Verificar que haya suficiente saldo para restar
    IF NEW.egresos IS NOT NULL THEN
        IF dinero_disponible_actual >= NEW.egresos THEN
            -- Restar del saldo si hay un egreso
            UPDATE tarjetas
            SET dinero_disponible = dinero_disponible_actual - NEW.egresos
            WHERE id_usuario = NEW.id_usuario AND id_tarjeta = NEW.id_tarjeta;
        ELSE
            RAISE EXCEPTION 'Saldo insuficiente para realizar el egreso';
        END IF;
    END IF;

    RETURN NEW;
END;
$$;


ALTER FUNCTION public.ajustar_saldo_egreso() OWNER TO postgres;

--
-- TOC entry 241 (class 1255 OID 16525)
-- Name: ajustar_saldo_ingreso(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.ajustar_saldo_ingreso() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    dinero_disponible_actual FLOAT;
BEGIN
    -- Obtener el saldo actual de la tarjeta
    SELECT dinero_disponible INTO dinero_disponible_actual
    FROM tarjetas
    WHERE id_usuario = NEW.id_usuario AND id_tarjeta = NEW.id_tarjeta;

    -- Sumar al saldo si hay un ingreso
    IF NEW.ingresos IS NOT NULL THEN
        UPDATE tarjetas
        SET dinero_disponible = dinero_disponible_actual + NEW.ingresos
        WHERE id_usuario = NEW.id_usuario AND id_tarjeta = NEW.id_tarjeta;
    END IF;

    RETURN NEW;
END;
$$;


ALTER FUNCTION public.ajustar_saldo_ingreso() OWNER TO postgres;

--
-- TOC entry 243 (class 1255 OID 16552)
-- Name: descontar_dinero_disponible(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.descontar_dinero_disponible() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Verificar si el dinero reservado ha cambiado
    IF NEW.dinero_reservado <> OLD.dinero_reservado THEN
        -- Si el dinero reservado ha aumentado, verificar que haya suficiente dinero disponible y reservado
        IF NEW.dinero_reservado > (OLD.dinero_disponible + OLD.dinero_reservado) THEN
            RAISE EXCEPTION 'No hay suficiente dinero disponible en la tarjeta, considerando el dinero reservado';
        END IF;

        -- Si el dinero reservado ha aumentado, descontamos la diferencia del dinero disponible
        IF NEW.dinero_reservado > OLD.dinero_reservado THEN
            UPDATE tarjetas
            SET dinero_disponible = dinero_disponible - (NEW.dinero_reservado - OLD.dinero_reservado)
            WHERE id_tarjeta = NEW.id_tarjeta;
        -- Si el dinero reservado ha disminuido, devolvemos la diferencia al dinero disponible
        ELSIF NEW.dinero_reservado < OLD.dinero_reservado THEN
            UPDATE tarjetas
            SET dinero_disponible = dinero_disponible + (OLD.dinero_reservado - NEW.dinero_reservado)
            WHERE id_tarjeta = NEW.id_tarjeta;
        END IF;

        -- Comprobar que el saldo no quede negativo después de la actualización
        IF (SELECT dinero_disponible FROM tarjetas WHERE id_tarjeta = NEW.id_tarjeta) < 0 THEN
            RAISE EXCEPTION 'El saldo disponible no puede ser negativo';
        END IF;
    END IF;

    RETURN NEW;
END;

$$;


ALTER FUNCTION public.descontar_dinero_disponible() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 227 (class 1259 OID 16478)
-- Name: movimientos; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.movimientos (
    id_movimiento integer NOT NULL,
    id_usuario integer NOT NULL,
    id_tarjeta integer NOT NULL,
    ingresos double precision,
    egresos double precision,
    descripcion_movimiento character varying(100) NOT NULL,
    fecha date NOT NULL,
    tipo_tarjeta character varying(50)
);


ALTER TABLE public.movimientos OWNER TO postgres;

--
-- TOC entry 226 (class 1259 OID 16477)
-- Name: movimientos_id_movimiento_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.movimientos_id_movimiento_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.movimientos_id_movimiento_seq OWNER TO postgres;

--
-- TOC entry 4859 (class 0 OID 0)
-- Dependencies: 226
-- Name: movimientos_id_movimiento_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.movimientos_id_movimiento_seq OWNED BY public.movimientos.id_movimiento;


--
-- TOC entry 219 (class 1259 OID 16414)
-- Name: notificaciones; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.notificaciones (
    id_notificacion integer NOT NULL,
    id_usuario integer NOT NULL,
    descripcion character varying(150),
    fecha date NOT NULL,
    status boolean
);


ALTER TABLE public.notificaciones OWNER TO postgres;

--
-- TOC entry 223 (class 1259 OID 16453)
-- Name: notificaciones_id_notificacion_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.notificaciones ALTER COLUMN id_notificacion ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.notificaciones_id_notificacion_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 225 (class 1259 OID 16470)
-- Name: notificacionessinleer; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.notificacionessinleer AS
 SELECT id_usuario,
    id_notificacion,
    descripcion,
    fecha
   FROM public.notificaciones
  WHERE (status = true);


ALTER VIEW public.notificacionessinleer OWNER TO postgres;

--
-- TOC entry 224 (class 1259 OID 16466)
-- Name: notificacionesvistas; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.notificacionesvistas AS
 SELECT id_usuario,
    id_notificacion,
    descripcion,
    fecha
   FROM public.notificaciones
  WHERE (status = false);


ALTER VIEW public.notificacionesvistas OWNER TO postgres;

--
-- TOC entry 218 (class 1259 OID 16394)
-- Name: tarjetas; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tarjetas (
    id_tarjeta integer NOT NULL,
    id_usuario integer NOT NULL,
    nombre_usuario character varying(50) NOT NULL,
    tipo_tarjeta character varying(50) NOT NULL,
    numero_tarjeta character varying(50) NOT NULL,
    dinero_disponible double precision NOT NULL,
    status boolean NOT NULL,
    pin integer,
    dinero_reservado integer NOT NULL
);


ALTER TABLE public.tarjetas OWNER TO postgres;

--
-- TOC entry 228 (class 1259 OID 16494)
-- Name: tarjetas_dinero_reservado_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.tarjetas ALTER COLUMN dinero_reservado ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.tarjetas_dinero_reservado_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 222 (class 1259 OID 16451)
-- Name: tarjetas_id_tarjeta_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.tarjetas ALTER COLUMN id_tarjeta ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.tarjetas_id_tarjeta_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 217 (class 1259 OID 16389)
-- Name: usuarios; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.usuarios (
    id_usuario integer NOT NULL,
    nombre_usuario character varying(50) NOT NULL,
    correo character varying(50) NOT NULL,
    "contraseña" character varying(50) NOT NULL,
    ciudad character varying(50) NOT NULL,
    status boolean
);


ALTER TABLE public.usuarios OWNER TO postgres;

--
-- TOC entry 221 (class 1259 OID 16450)
-- Name: usuarios_id_usuario_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.usuarios ALTER COLUMN id_usuario ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.usuarios_id_usuario_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 220 (class 1259 OID 16446)
-- Name: usuariotarjetas; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.usuariotarjetas AS
 SELECT id_usuario,
    nombre_usuario,
    numero_tarjeta,
    tipo_tarjeta
   FROM public.tarjetas
  WHERE (status = true);


ALTER VIEW public.usuariotarjetas OWNER TO postgres;

--
-- TOC entry 229 (class 1259 OID 16554)
-- Name: vista_ahorros_usuario; Type: VIEW; Schema: public; Owner: postgres
--

CREATE VIEW public.vista_ahorros_usuario AS
 SELECT u.id_usuario,
    COALESCE((sum(m.ingresos) - sum(m.egresos)), (0)::double precision) AS ahorro_total,
    COALESCE(sum(m.egresos), (0)::double precision) AS gastos,
    COALESCE(t.tipo_tarjeta) AS tipo_tarjeta,
    COALESCE(sum(m.ingresos), (0)::double precision) AS ingresos,
    COALESCE(t.dinero_disponible, (0)::double precision) AS dinero_disponible,
    COALESCE(t.dinero_reservado, 0) AS dinero_reservado
   FROM ((public.usuarios u
     LEFT JOIN public.movimientos m ON ((u.id_usuario = m.id_usuario)))
     LEFT JOIN public.tarjetas t ON ((u.id_usuario = t.id_usuario)))
  GROUP BY u.id_usuario, t.dinero_disponible, t.tipo_tarjeta, t.dinero_reservado;


ALTER VIEW public.vista_ahorros_usuario OWNER TO postgres;

--
-- TOC entry 4676 (class 2604 OID 16481)
-- Name: movimientos id_movimiento; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.movimientos ALTER COLUMN id_movimiento SET DEFAULT nextval('public.movimientos_id_movimiento_seq'::regclass);


--
-- TOC entry 4852 (class 0 OID 16478)
-- Dependencies: 227
-- Data for Name: movimientos; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.movimientos (id_movimiento, id_usuario, id_tarjeta, ingresos, egresos, descripcion_movimiento, fecha, tipo_tarjeta) FROM stdin;
1	1	1	1000	0	Quincena	2024-10-15	Debito
2	1	1	0	100	Gamepass	2024-10-15	Debito
3	1	1	0	100	Gamepass	2024-10-15	Debito
4	1	1	0	100	Dinero reservado actualizado y egresos tienen la cantidad que se reservó	2024-11-18	Débito
5	1	1	0	200	Dinero reservado actualizado	2024-11-18	Débito
6	1	1	0	0	Dinero reservado actualizado	2024-11-18	Débito
11	1	1	0	0	Dinero reservado actualizado	2024-11-18	Débito
12	1	1	0	100	Dinero reservado actualizado	2024-11-18	Débito
13	1	1	0	0	Dinero reservado actualizado	2024-11-18	Débito
14	1	1	0	100	Dinero reservado actualizado	2024-11-18	Débito
15	1	1	0	200	Dinero reservado actualizado	2024-11-18	Débito
17	1	1	0	0	Dinero reservado actualizado	2024-11-18	Débito
18	1	1	0	0	Dinero reservado actualizado	2024-11-18	Débito
\.


--
-- TOC entry 4847 (class 0 OID 16414)
-- Dependencies: 219
-- Data for Name: notificaciones; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.notificaciones (id_notificacion, id_usuario, descripcion, fecha, status) FROM stdin;
1	1	Su suscripcion esta apunto de terminar	2024-10-31	t
\.


--
-- TOC entry 4846 (class 0 OID 16394)
-- Dependencies: 218
-- Data for Name: tarjetas; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.tarjetas (id_tarjeta, id_usuario, nombre_usuario, tipo_tarjeta, numero_tarjeta, dinero_disponible, status, pin, dinero_reservado) FROM stdin;
2	1	Jorge	Credito	5432-8978-1011-1312	800	t	5432	0
1	1	Jorge	Débito	1234-5678-9101-1121	1000	t	1234	200
\.


--
-- TOC entry 4845 (class 0 OID 16389)
-- Dependencies: 217
-- Data for Name: usuarios; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.usuarios (id_usuario, nombre_usuario, correo, "contraseña", ciudad, status) FROM stdin;
1	Jorge	Jorge@gmail.com	1234	Guadalajara	t
\.


--
-- TOC entry 4860 (class 0 OID 0)
-- Dependencies: 226
-- Name: movimientos_id_movimiento_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.movimientos_id_movimiento_seq', 18, true);


--
-- TOC entry 4861 (class 0 OID 0)
-- Dependencies: 223
-- Name: notificaciones_id_notificacion_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.notificaciones_id_notificacion_seq', 1, true);


--
-- TOC entry 4862 (class 0 OID 0)
-- Dependencies: 228
-- Name: tarjetas_dinero_reservado_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.tarjetas_dinero_reservado_seq', 1, true);


--
-- TOC entry 4863 (class 0 OID 0)
-- Dependencies: 222
-- Name: tarjetas_id_tarjeta_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.tarjetas_id_tarjeta_seq', 2, true);


--
-- TOC entry 4864 (class 0 OID 0)
-- Dependencies: 221
-- Name: usuarios_id_usuario_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.usuarios_id_usuario_seq', 4, true);


--
-- TOC entry 4688 (class 2606 OID 16483)
-- Name: movimientos movimientos_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.movimientos
    ADD CONSTRAINT movimientos_pkey PRIMARY KEY (id_movimiento);


--
-- TOC entry 4686 (class 2606 OID 16418)
-- Name: notificaciones notificaciones_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notificaciones
    ADD CONSTRAINT notificaciones_pkey PRIMARY KEY (id_notificacion);


--
-- TOC entry 4680 (class 2606 OID 16398)
-- Name: tarjetas tarjetas_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tarjetas
    ADD CONSTRAINT tarjetas_pkey PRIMARY KEY (id_tarjeta);


--
-- TOC entry 4682 (class 2606 OID 16455)
-- Name: tarjetas unique_numero_tarjeta; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tarjetas
    ADD CONSTRAINT unique_numero_tarjeta UNIQUE (numero_tarjeta);


--
-- TOC entry 4684 (class 2606 OID 16457)
-- Name: tarjetas unique_pin; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tarjetas
    ADD CONSTRAINT unique_pin UNIQUE (pin);


--
-- TOC entry 4678 (class 2606 OID 16393)
-- Name: usuarios usuarios_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.usuarios
    ADD CONSTRAINT usuarios_pkey PRIMARY KEY (id_usuario);


--
-- TOC entry 4694 (class 2620 OID 16528)
-- Name: movimientos ajustar_saldo_egreso; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER ajustar_saldo_egreso AFTER INSERT ON public.movimientos FOR EACH ROW EXECUTE FUNCTION public.ajustar_saldo_egreso();


--
-- TOC entry 4695 (class 2620 OID 16526)
-- Name: movimientos ajustar_saldo_ingreso; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER ajustar_saldo_ingreso AFTER INSERT ON public.movimientos FOR EACH ROW EXECUTE FUNCTION public.ajustar_saldo_ingreso();


--
-- TOC entry 4693 (class 2620 OID 16553)
-- Name: tarjetas trigger_descuento_dinero; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_descuento_dinero AFTER UPDATE OF dinero_reservado ON public.tarjetas FOR EACH ROW EXECUTE FUNCTION public.descontar_dinero_disponible();


--
-- TOC entry 4691 (class 2606 OID 16489)
-- Name: movimientos movimientos_id_tarjeta_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.movimientos
    ADD CONSTRAINT movimientos_id_tarjeta_fkey FOREIGN KEY (id_tarjeta) REFERENCES public.tarjetas(id_tarjeta);


--
-- TOC entry 4692 (class 2606 OID 16484)
-- Name: movimientos movimientos_id_usuario_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.movimientos
    ADD CONSTRAINT movimientos_id_usuario_fkey FOREIGN KEY (id_usuario) REFERENCES public.usuarios(id_usuario);


--
-- TOC entry 4690 (class 2606 OID 16419)
-- Name: notificaciones notificaciones_id_usuario_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notificaciones
    ADD CONSTRAINT notificaciones_id_usuario_fkey FOREIGN KEY (id_usuario) REFERENCES public.usuarios(id_usuario);


--
-- TOC entry 4689 (class 2606 OID 16399)
-- Name: tarjetas tarjetas_id_usuario_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tarjetas
    ADD CONSTRAINT tarjetas_id_usuario_fkey FOREIGN KEY (id_usuario) REFERENCES public.usuarios(id_usuario);


-- Completed on 2024-11-18 17:44:01

--
-- PostgreSQL database dump complete
--

